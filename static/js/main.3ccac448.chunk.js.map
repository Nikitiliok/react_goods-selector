{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","add","item","setState","prev","push","remove","indexOf","splice","title","result","length","join","slice","className","this","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,IAAM,SAACC,GACL,EAAKC,UAAS,SAACC,GAGb,OAFAA,EAAKJ,cAAcK,KAAKH,GAEjB,CAAEF,cAAeI,EAAKJ,mBATnC,EAaEM,OAAS,SAACJ,GACR,IAAMK,EAAU,EAAKR,MAAMC,cAAcO,QAAQL,GAEjD,EAAKC,UAAS,SAACC,GAGb,OAFAA,EAAKJ,cAAcQ,OAAOD,EAAS,GAE5B,CAAEP,cAAeI,EAAKJ,mBAnBnC,EAuBES,MAAQ,WACN,IAAIC,EAAS,GACLV,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcW,QACpB,KAAM,EACJD,GAAU,oBACV,MACF,KAAM,EACJA,GAAM,UAAOV,EAAc,GAArB,gBACN,MACF,KAAM,EACJU,GAAM,UAAOV,EAAcY,KAAK,SAA1B,iBACN,MACF,QACEF,GAAM,UAAOV,EAAca,MAAM,GAAI,GAAGD,KAAK,MAAvC,2BACEZ,EAAca,OAAO,GADvB,iBAKV,OAAOH,GA3CX,4CA8CE,WAAU,IAAD,OACP,OACE,sBAAKI,UAAU,MAAf,UACE,gCACE,oBAAIA,UAAU,aAAd,SAA4BC,KAAKN,UAEjC,wBACEK,UAAU,aACVE,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEH,cAAe,MAJnC,SAOGe,KAAKhB,MAAMC,cAAcW,OAAS,EAAI,QAAU,QAIrD,oBAAIG,UAAU,YAAd,SACGjB,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,oBAEEY,UAAS,yBACP,EAAKf,MAAMC,cAAcmB,SAASjB,GAC9B,SACA,IALR,SAQE,wBAAOY,UAAU,kBAAjB,UACE,sBAAMA,UAAU,sBAAhB,SAAuCZ,IACvC,wBACEY,UAAU,wBACVE,KAAK,SACLC,QACE,EAAKlB,MAAMC,cAAcmB,SAASjB,GAC9B,kBAAM,EAAKI,OAAOJ,IAClB,kBAAM,EAAKD,IAAIC,IANvB,SASG,EAAKH,MAAMC,cAAcmB,SAASjB,GAC/B,SACA,eApBHA,eAlEnB,GAAyBkB,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3ccac448.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  add = (item: string) => {\n    this.setState((prev) => {\n      prev.selectedGoods.push(item);\n\n      return { selectedGoods: prev.selectedGoods };\n    });\n  };\n\n  remove = (item: string) => {\n    const indexOf = this.state.selectedGoods.indexOf(item);\n\n    this.setState((prev) => {\n      prev.selectedGoods.splice(indexOf, 1);\n\n      return { selectedGoods: prev.selectedGoods };\n    });\n  };\n\n  title = () => {\n    let result = '';\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case (0):\n        result += 'No goods selected';\n        break;\n      case (1):\n        result += `${selectedGoods[0]} is selected`;\n        break;\n      case (2):\n        result += `${selectedGoods.join(' and ')} are selected`;\n        break;\n      default:\n        result += `${selectedGoods.slice(0, -1).join(', ')}\n          and ${selectedGoods.slice(-1)} are selected`;\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div>\n          <h1 className=\"app__title\">{this.title()}</h1>\n\n          <button\n            className=\"app__clear\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ selectedGoods: [] });\n            }}\n          >\n            {this.state.selectedGoods.length > 0 ? 'Clear' : ''}\n          </button>\n        </div>\n\n        <ul className=\"app__list\">\n          {goodsFromServer.map(item => (\n            <li\n              key={item}\n              className={`app__list-item ${\n                this.state.selectedGoods.includes(item)\n                  ? 'active'\n                  : ''\n              }`}\n            >\n              <label className=\"app__list-label\">\n                <span className=\"app__list-item-name\">{item}</span>\n                <button\n                  className=\"app__list-item-button\"\n                  type=\"button\"\n                  onClick={\n                    this.state.selectedGoods.includes(item)\n                      ? () => this.remove(item)\n                      : () => this.add(item)\n                  }\n                >\n                  {this.state.selectedGoods.includes(item)\n                    ? 'Remove'\n                    : 'Select'}\n                </button>\n              </label>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}